export const ROUTER_ABI = [
	{
		inputs: [
			{ internalType: 'address', name: 'ccipRouter', type: 'address' },
			{ internalType: 'address', name: 'link', type: 'address' },
			{ internalType: 'address', name: 'nftAddress', type: 'address' },
			{ internalType: 'string', name: '_donId', type: 'string' },
		],
		stateMutability: 'nonpayable',
		type: 'constructor',
	},
	{
		inputs: [
			{
				components: [
					{ internalType: 'bytes32', name: 'messageId', type: 'bytes32' },
					{ internalType: 'uint64', name: 'sourceChainSelector', type: 'uint64' },
					{ internalType: 'bytes', name: 'sender', type: 'bytes' },
					{ internalType: 'bytes', name: 'data', type: 'bytes' },
					{
						components: [
							{ internalType: 'address', name: 'token', type: 'address' },
							{ internalType: 'uint256', name: 'amount', type: 'uint256' },
						],
						internalType: 'struct Client.EVMTokenAmount[]',
						name: 'destTokenAmounts',
						type: 'tuple[]',
					},
				],
				internalType: 'struct Client.Any2EVMMessage',
				name: 'message',
				type: 'tuple',
			},
		],
		name: 'CrossChainMintError',
		type: 'error',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'owner', type: 'address' },
			{ internalType: 'address', name: 'target', type: 'address' },
			{ internalType: 'uint256', name: 'value', type: 'uint256' },
		],
		name: 'FailedToWithdraw',
		type: 'error',
	},
	{
		inputs: [{ internalType: 'address', name: 'router', type: 'address' }],
		name: 'InvalidRouter',
		type: 'error',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'to', type: 'address' },
			{ internalType: 'string', name: 'uri', type: 'string' },
		],
		name: 'MintError',
		type: 'error',
	},
	{ inputs: [], name: 'NotPortalContract', type: 'error' },
	{ inputs: [], name: 'UnAuthorizedMinter', type: 'error' },
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: 'uint64',
				name: 'destinationChain',
				type: 'uint64',
			},
			{
				indexed: false,
				internalType: 'enum CCIPFeesTypes.PayFeesIn',
				name: 'payFeesIn',
				type: 'uint8',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: 'tokenId',
				type: 'uint256',
			},
			{ indexed: false, internalType: 'address', name: 'to', type: 'address' },
			{ indexed: false, internalType: 'string', name: 'uri', type: 'string' },
			{ indexed: false, internalType: 'uint256', name: 'fee', type: 'uint256' },
			{
				indexed: false,
				internalType: 'bytes32',
				name: 'messageId',
				type: 'bytes32',
			},
		],
		name: 'InitiateCrossChainTransfer',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: 'bytes32',
				name: 'messageId',
				type: 'bytes32',
			},
		],
		name: 'MessageSent',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: 'address', name: 'from', type: 'address' },
			{ indexed: true, internalType: 'address', name: 'to', type: 'address' },
		],
		name: 'OwnershipTransferRequested',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: 'address', name: 'from', type: 'address' },
			{ indexed: true, internalType: 'address', name: 'to', type: 'address' },
		],
		name: 'OwnershipTransferred',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: 'string', name: 'source', type: 'string' },
			{
				indexed: false,
				internalType: 'bytes',
				name: 'encryptedSecretsUrls',
				type: 'bytes',
			},
			{
				indexed: false,
				internalType: 'uint8',
				name: 'donHostedSecretsSlotID',
				type: 'uint8',
			},
			{
				indexed: false,
				internalType: 'uint64',
				name: 'donHostedSecretsVersion',
				type: 'uint64',
			},
			{ indexed: false, internalType: 'string[]', name: 'args', type: 'string[]' },
			{
				indexed: false,
				internalType: 'bytes[]',
				name: 'bytesArgs',
				type: 'bytes[]',
			},
			{
				indexed: false,
				internalType: 'uint64',
				name: 'subscriptionId',
				type: 'uint64',
			},
			{ indexed: false, internalType: 'uint32', name: 'gasLimit', type: 'uint32' },
			{ indexed: false, internalType: 'bytes32', name: 'donId', type: 'bytes32' },
		],
		name: 'RequestURIUpdate',
		type: 'event',
	},
	{
		inputs: [],
		name: 'acceptOwnership',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				components: [
					{ internalType: 'bytes32', name: 'messageId', type: 'bytes32' },
					{ internalType: 'uint64', name: 'sourceChainSelector', type: 'uint64' },
					{ internalType: 'bytes', name: 'sender', type: 'bytes' },
					{ internalType: 'bytes', name: 'data', type: 'bytes' },
					{
						components: [
							{ internalType: 'address', name: 'token', type: 'address' },
							{ internalType: 'uint256', name: 'amount', type: 'uint256' },
						],
						internalType: 'struct Client.EVMTokenAmount[]',
						name: 'destTokenAmounts',
						type: 'tuple[]',
					},
				],
				internalType: 'struct Client.Any2EVMMessage',
				name: 'message',
				type: 'tuple',
			},
		],
		name: 'ccipReceive',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'string', name: '_source', type: 'string' }],
		name: 'changeSource',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				components: [
					{ internalType: 'uint256', name: 'index', type: 'uint256' },
					{ internalType: 'uint256', name: 'timestamp', type: 'uint256' },
					{ internalType: 'bytes32', name: 'txHash', type: 'bytes32' },
					{ internalType: 'uint256', name: 'blockNumber', type: 'uint256' },
					{ internalType: 'bytes32', name: 'blockHash', type: 'bytes32' },
					{ internalType: 'address', name: 'source', type: 'address' },
					{ internalType: 'bytes32[]', name: 'topics', type: 'bytes32[]' },
					{ internalType: 'bytes', name: 'data', type: 'bytes' },
				],
				internalType: 'struct Log',
				name: 'log',
				type: 'tuple',
			},
			{ internalType: 'bytes', name: '', type: 'bytes' },
		],
		name: 'checkLog',
		outputs: [
			{ internalType: 'bool', name: 'upkeepNeeded', type: 'bool' },
			{ internalType: 'bytes', name: 'performData', type: 'bytes' },
		],
		stateMutability: 'pure',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'uint64', name: 'destinationChainSelector', type: 'uint64' },
			{ internalType: 'address', name: 'receiver', type: 'address' },
			{
				internalType: 'enum CCIPFeesTypes.PayFeesIn',
				name: 'payFeesIn',
				type: 'uint8',
			},
			{ internalType: 'uint256', name: 'tokenId', type: 'uint256' },
			{ internalType: 'address', name: 'to', type: 'address' },
			{ internalType: 'string', name: 'uri', type: 'string' },
		],
		name: 'crossChainTransfer',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'donId',
		outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'gasLimit',
		outputs: [{ internalType: 'uint32', name: '', type: 'uint32' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'getRouter',
		outputs: [{ internalType: 'address', name: '', type: 'address' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'address', name: '', type: 'address' }],
		name: 'isMinter',
		outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'to', type: 'address' },
			{ internalType: 'string', name: 'uri', type: 'string' },
		],
		name: 'mint',
		outputs: [
			{ internalType: 'bool', name: '', type: 'bool' },
			{ internalType: 'bytes', name: '', type: 'bytes' },
		],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'nft',
		outputs: [{ internalType: 'contract Portals', name: '', type: 'address' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'owner',
		outputs: [{ internalType: 'address', name: '', type: 'address' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'bytes', name: 'performData', type: 'bytes' }],
		name: 'performUpkeep',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'string', name: '_donId', type: 'string' }],
		name: 'setDonId',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'uint32', name: '_gasLimit', type: 'uint32' }],
		name: 'setGasLimit',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'minter', type: 'address' },
			{ internalType: 'bool', name: 'isMinter_', type: 'bool' },
		],
		name: 'setMinter',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'uint64', name: '_subscriptionId', type: 'uint64' }],
		name: 'setSubscriptionId',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'source',
		outputs: [{ internalType: 'string', name: '', type: 'string' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'subscriptionId',
		outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
		name: 'supportsInterface',
		outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
		stateMutability: 'pure',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'address', name: 'to', type: 'address' }],
		name: 'transferOwnership',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'address', name: 'beneficiary', type: 'address' }],
		name: 'withdraw',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'beneficiary', type: 'address' },
			{ internalType: 'address', name: 'token', type: 'address' },
		],
		name: 'withdrawToken',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{ stateMutability: 'payable', type: 'receive' },
];

export const PORTALS_ABI = [
	{
		inputs: [
			{ internalType: 'address', name: 'initialOwner', type: 'address' },
			{ internalType: 'address', name: 'functionsRouter', type: 'address' },
		],
		stateMutability: 'nonpayable',
		type: 'constructor',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'sender', type: 'address' },
			{ internalType: 'uint256', name: 'tokenId', type: 'uint256' },
			{ internalType: 'address', name: 'owner', type: 'address' },
		],
		name: 'ERC721IncorrectOwner',
		type: 'error',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'operator', type: 'address' },
			{ internalType: 'uint256', name: 'tokenId', type: 'uint256' },
		],
		name: 'ERC721InsufficientApproval',
		type: 'error',
	},
	{
		inputs: [{ internalType: 'address', name: 'approver', type: 'address' }],
		name: 'ERC721InvalidApprover',
		type: 'error',
	},
	{
		inputs: [{ internalType: 'address', name: 'operator', type: 'address' }],
		name: 'ERC721InvalidOperator',
		type: 'error',
	},
	{
		inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
		name: 'ERC721InvalidOwner',
		type: 'error',
	},
	{
		inputs: [{ internalType: 'address', name: 'receiver', type: 'address' }],
		name: 'ERC721InvalidReceiver',
		type: 'error',
	},
	{
		inputs: [{ internalType: 'address', name: 'sender', type: 'address' }],
		name: 'ERC721InvalidSender',
		type: 'error',
	},
	{
		inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
		name: 'ERC721NonexistentToken',
		type: 'error',
	},
	{ inputs: [], name: 'EmptyArgs', type: 'error' },
	{ inputs: [], name: 'EmptySecrets', type: 'error' },
	{ inputs: [], name: 'EmptySource', type: 'error' },
	{ inputs: [], name: 'NoInlineSecrets', type: 'error' },
	{ inputs: [], name: 'NotAllowed', type: 'error' },
	{
		inputs: [
			{ internalType: 'uint256', name: 'tokenId', type: 'uint256' },
			{ internalType: 'address', name: 'user', type: 'address' },
		],
		name: 'NotOwnerOfToken',
		type: 'error',
	},
	{ inputs: [], name: 'NotRouter', type: 'error' },
	{ inputs: [], name: 'OnlyRouterCanFulfill', type: 'error' },
	{
		inputs: [{ internalType: 'bytes32', name: 'requestId', type: 'bytes32' }],
		name: 'UnexpectedRequestID',
		type: 'error',
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: 'address', name: 'owner', type: 'address' },
			{
				indexed: true,
				internalType: 'address',
				name: 'approved',
				type: 'address',
			},
			{ indexed: true, internalType: 'uint256', name: 'tokenId', type: 'uint256' },
		],
		name: 'Approval',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: 'address', name: 'owner', type: 'address' },
			{
				indexed: true,
				internalType: 'address',
				name: 'operator',
				type: 'address',
			},
			{ indexed: false, internalType: 'bool', name: 'approved', type: 'bool' },
		],
		name: 'ApprovalForAll',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: 'uint256',
				name: '_fromTokenId',
				type: 'uint256',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: '_toTokenId',
				type: 'uint256',
			},
		],
		name: 'BatchMetadataUpdate',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: 'uint256',
				name: 'chainId',
				type: 'uint256',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: 'tokenId',
				type: 'uint256',
			},
			{ indexed: false, internalType: 'string', name: 'uri', type: 'string' },
		],
		name: 'CrossChainMintSuccess',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: 'uint256',
				name: 'tokenId',
				type: 'uint256',
			},
			{
				indexed: false,
				internalType: 'uint64',
				name: 'destinationChainSelector',
				type: 'uint64',
			},
			{
				indexed: false,
				internalType: 'address',
				name: 'receiver',
				type: 'address',
			},
			{
				indexed: false,
				internalType: 'enum CCIPFeesTypes.PayFeesIn',
				name: 'payFeesIn',
				type: 'uint8',
			},
			{ indexed: false, internalType: 'address', name: 'to', type: 'address' },
		],
		name: 'CrossChainTransferRequested',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: 'uint256',
				name: '_tokenId',
				type: 'uint256',
			},
		],
		name: 'MetadataUpdate',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: 'address', name: 'from', type: 'address' },
			{ indexed: true, internalType: 'address', name: 'to', type: 'address' },
		],
		name: 'OwnershipTransferRequested',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: 'address', name: 'from', type: 'address' },
			{ indexed: true, internalType: 'address', name: 'to', type: 'address' },
		],
		name: 'OwnershipTransferred',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: 'bytes32', name: 'id', type: 'bytes32' },
		],
		name: 'RequestFulfilled',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: 'bytes32', name: 'id', type: 'bytes32' },
		],
		name: 'RequestSent',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'bytes32',
				name: 'requestId',
				type: 'bytes32',
			},
			{ indexed: false, internalType: 'bytes', name: 'response', type: 'bytes' },
			{ indexed: false, internalType: 'bytes', name: 'err', type: 'bytes' },
		],
		name: 'Response',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: 'address', name: 'from', type: 'address' },
			{ indexed: true, internalType: 'address', name: 'to', type: 'address' },
			{ indexed: true, internalType: 'uint256', name: 'tokenId', type: 'uint256' },
		],
		name: 'Transfer',
		type: 'event',
	},
	{
		inputs: [],
		name: '_nextTokenId',
		outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'acceptOwnership',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'to', type: 'address' },
			{ internalType: 'uint256', name: 'tokenId', type: 'uint256' },
		],
		name: 'approve',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
		name: 'balanceOf',
		outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
		name: 'burn',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'to', type: 'address' },
			{ internalType: 'string', name: 'uri', type: 'string' },
		],
		name: 'crossChainMint',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
		name: 'getApproved',
		outputs: [{ internalType: 'address', name: '', type: 'address' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'bytes32', name: 'requestId', type: 'bytes32' },
			{ internalType: 'bytes', name: 'response', type: 'bytes' },
			{ internalType: 'bytes', name: 'err', type: 'bytes' },
		],
		name: 'handleOracleFulfillment',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'owner', type: 'address' },
			{ internalType: 'address', name: 'operator', type: 'address' },
		],
		name: 'isApprovedForAll',
		outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'name',
		outputs: [{ internalType: 'string', name: '', type: 'string' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'owner',
		outputs: [{ internalType: 'address', name: '', type: 'address' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
		name: 'ownerOf',
		outputs: [{ internalType: 'address', name: '', type: 'address' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'uint256', name: 'tokenId', type: 'uint256' },
			{ internalType: 'uint64', name: 'destinationChainSelector', type: 'uint64' },
			{ internalType: 'address', name: 'receiver', type: 'address' },
			{
				internalType: 'enum CCIPFeesTypes.PayFeesIn',
				name: 'payFeesIn',
				type: 'uint8',
			},
			{ internalType: 'address', name: 'to', type: 'address' },
		],
		name: 'requestCrossChainTransfer',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'router',
		outputs: [{ internalType: 'contract Router', name: '', type: 'address' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 's_lastError',
		outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 's_lastRequestId',
		outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 's_lastResponse',
		outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'to', type: 'address' },
			{ internalType: 'string', name: 'uri', type: 'string' },
		],
		name: 'safeMint',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'from', type: 'address' },
			{ internalType: 'address', name: 'to', type: 'address' },
			{ internalType: 'uint256', name: 'tokenId', type: 'uint256' },
		],
		name: 'safeTransferFrom',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'from', type: 'address' },
			{ internalType: 'address', name: 'to', type: 'address' },
			{ internalType: 'uint256', name: 'tokenId', type: 'uint256' },
			{ internalType: 'bytes', name: 'data', type: 'bytes' },
		],
		name: 'safeTransferFrom',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'string', name: 'source', type: 'string' },
			{ internalType: 'bytes', name: 'encryptedSecretsUrls', type: 'bytes' },
			{ internalType: 'uint8', name: 'donHostedSecretsSlotID', type: 'uint8' },
			{ internalType: 'uint64', name: 'donHostedSecretsVersion', type: 'uint64' },
			{ internalType: 'string[]', name: 'args', type: 'string[]' },
			{ internalType: 'bytes[]', name: 'bytesArgs', type: 'bytes[]' },
			{ internalType: 'uint64', name: 'subscriptionId', type: 'uint64' },
			{ internalType: 'uint32', name: 'gasLimit', type: 'uint32' },
			{ internalType: 'bytes32', name: 'donID', type: 'bytes32' },
		],
		name: 'sendRequest',
		outputs: [{ internalType: 'bytes32', name: 'requestId', type: 'bytes32' }],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'bytes', name: 'request', type: 'bytes' },
			{ internalType: 'uint64', name: 'subscriptionId', type: 'uint64' },
			{ internalType: 'uint32', name: 'gasLimit', type: 'uint32' },
			{ internalType: 'bytes32', name: 'donID', type: 'bytes32' },
		],
		name: 'sendRequestCBOR',
		outputs: [{ internalType: 'bytes32', name: 'requestId', type: 'bytes32' }],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'operator', type: 'address' },
			{ internalType: 'bool', name: 'approved', type: 'bool' },
		],
		name: 'setApprovalForAll',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'address', name: '_router', type: 'address' }],
		name: 'setRouter',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
		name: 'supportsInterface',
		outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'symbol',
		outputs: [{ internalType: 'string', name: '', type: 'string' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
		name: 'tokenURI',
		outputs: [{ internalType: 'string', name: '', type: 'string' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'from', type: 'address' },
			{ internalType: 'address', name: 'to', type: 'address' },
			{ internalType: 'uint256', name: 'tokenId', type: 'uint256' },
		],
		name: 'transferFrom',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [{ internalType: 'address', name: 'to', type: 'address' }],
		name: 'transferOwnership',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
];
